{
  "version": 3,
  "sources": ["../../ag-grid-vue3/lib/Utils.js", "../../ag-grid-vue3/lib/VueComponentFactory.js", "../../ag-grid-vue3/lib/VueFrameworkComponentWrapper.js", "../../ag-grid-vue3/lib/VueFrameworkOverrides.js", "../../ag-grid-vue3/lib/AgGridVue.js"],
  "sourcesContent": ["import { ComponentUtil } from 'ag-grid-community';\nexport const kebabProperty = (property) => {\n    return property.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n};\nexport const kebabNameToAttrEventName = (kebabName) => {\n    // grid-ready for example would become onGrid-ready in Vue\n    return `on${kebabName.charAt(0).toUpperCase()}${kebabName.substring(1, kebabName.length)}`;\n};\nexport const getAgGridProperties = () => {\n    const props = {};\n    // for example, 'grid-ready' would become 'onGrid-ready': undefined\n    // without this emitting events results in a warning\n    // and adding 'grid-ready' (and variations of this to the emits option in AgGridVue doesn't help either)\n    const eventNameAsProps = ComponentUtil.PUBLIC_EVENTS.map((eventName) => kebabNameToAttrEventName(kebabProperty(eventName)));\n    eventNameAsProps.forEach((eventName) => props[eventName] = undefined);\n    const computed = {\n        props() {\n            const options = {};\n            ComponentUtil.ALL_PROPERTIES.forEach((propertyName) => {\n                var _a;\n                if (this[propertyName] === ComponentUtil.VUE_OMITTED_PROPERTY) {\n                    return;\n                }\n                if (propertyName in this || propertyName in this.gridOptions) {\n                    options[propertyName] = (_a = this[propertyName]) !== null && _a !== void 0 ? _a : this.gridOptions[propertyName];\n                }\n            });\n            return options;\n        },\n    };\n    const watch = {\n        modelValue: {\n            handler(currentValue, previousValue) {\n                if (!this.gridCreated || !this.api) {\n                    return;\n                }\n                /*\n                 * Prevents an infinite loop when using v-model for the rowData\n                 */\n                if (currentValue === previousValue) {\n                    return;\n                }\n                if (currentValue && previousValue) {\n                    if (currentValue.length === previousValue.length) {\n                        if (currentValue.every((item, index) => item === previousValue[index])) {\n                            return;\n                        }\n                    }\n                }\n                ComponentUtil.processOnChange({ rowData: currentValue }, this.api);\n            },\n            deep: true\n        },\n        props: {\n            handler(currentValue, previousValue) {\n                if (!this.gridCreated || !this.api) {\n                    return;\n                }\n                const changes = {};\n                Object.entries(currentValue).forEach(([key, value]) => {\n                    if (previousValue[key] === value)\n                        return;\n                    changes[key] = value;\n                });\n                ComponentUtil.processOnChange(changes, this.api);\n            },\n            deep: true,\n        },\n    };\n    ComponentUtil.ALL_PROPERTIES\n        .filter((propertyName) => propertyName != 'gridOptions') // dealt with in AgGridVue itself\n        .forEach((propertyName) => {\n        props[propertyName] = {\n            default: ComponentUtil.VUE_OMITTED_PROPERTY,\n        };\n    });\n    return [props, computed, watch];\n};\n", "import { createVNode, defineComponent, render } from 'vue';\nexport class VueComponentFactory {\n    static getComponentDefinition(component, parent) {\n        let componentDefinition;\n        // when referencing components by name - ie: cellRenderer: 'MyComponent'\n        if (typeof component === 'string') {\n            // look up the definition in Vue\n            componentDefinition = this.searchForComponentInstance(parent, component);\n        }\n        else {\n            componentDefinition = { extends: defineComponent(Object.assign({}, component)) };\n        }\n        if (!componentDefinition) {\n            console.error(`Could not find component with name of ${component}. Is it in Vue.components?`);\n        }\n        if (componentDefinition.extends) {\n            if (componentDefinition.extends.setup) {\n                componentDefinition.setup = componentDefinition.extends.setup;\n            }\n            componentDefinition.extends.props = this.addParamsToProps(componentDefinition.extends.props);\n        }\n        else {\n            componentDefinition.props = this.addParamsToProps(componentDefinition.props);\n        }\n        return componentDefinition;\n    }\n    static addParamsToProps(props) {\n        if (!props || (Array.isArray(props) && props.indexOf('params') === -1)) {\n            props = ['params', ...(props ? props : [])];\n        }\n        else if (typeof props === 'object' && !props.params) {\n            /* tslint:disable:no-string-literal */\n            props['params'] = {\n                type: Object\n            };\n        }\n        return props;\n    }\n    static createAndMountComponent(component, params, parent, provides) {\n        const componentDefinition = VueComponentFactory.getComponentDefinition(component, parent);\n        if (!componentDefinition) {\n            return;\n        }\n        const { vNode, destroy, el } = this.mount(componentDefinition, { params: Object.freeze(params) }, parent, provides || {});\n        // note that the component creation is synchronous so that componentInstance is set by this point\n        return {\n            componentInstance: vNode.component.proxy,\n            element: el,\n            destroy,\n        };\n    }\n    static mount(component, props, parent, provides) {\n        let vNode = createVNode(component, props);\n        vNode.appContext = parent.$.appContext;\n        vNode.appContext.provides = Object.assign(Object.assign(Object.assign({}, provides), (vNode.appContext.provides ? vNode.appContext.provides : {})), (parent.$parent.$options.provide ? parent.$parent.$options.provide : {}));\n        let el = document.createElement('div');\n        render(vNode, el);\n        const destroy = () => {\n            if (el) {\n                render(null, el);\n            }\n            el = null;\n            vNode = null;\n        };\n        return { vNode, destroy, el };\n    }\n    static searchForComponentInstance(parent, component, maxDepth = 10, suppressError = false) {\n        let componentInstance = null;\n        let currentParent = parent.$parent;\n        let depth = 0;\n        while (!componentInstance &&\n            currentParent &&\n            currentParent.$options &&\n            (++depth < maxDepth)) {\n            const currentParentAsThis = currentParent;\n            if (currentParentAsThis.$options && currentParentAsThis.$options.components && currentParentAsThis.$options.components[component]) {\n                componentInstance = currentParentAsThis.$options.components[component];\n            }\n            else if (currentParentAsThis[component]) {\n                componentInstance = currentParentAsThis[component];\n            }\n            // componentInstance =  : null;\n            currentParent = currentParent.$parent;\n        }\n        // then search in globally registered components of app\n        if (!componentInstance) {\n            const components = parent.$.appContext.components;\n            if (components && components[component]) {\n                componentInstance = components[component];\n            }\n        }\n        if (!componentInstance && !suppressError) {\n            console.error(`Could not find component with name of ${component}. Is it in Vue.components?`);\n            return null;\n        }\n        return componentInstance;\n    }\n}\n", "import { BaseComponentWrapper } from 'ag-grid-community';\nimport { VueComponentFactory } from './VueComponentFactory';\nexport class VueFrameworkComponentWrapper extends BaseComponentWrapper {\n    constructor(parent, provides) {\n        super();\n        this.parent = parent;\n        // when using master detail things provides to the master (like urlql) will not be available to the child components\n        // we capture the parent provides here (the first one will be the parent) - and re-use this when creating child components in VueComponentFactory\n        if (!VueFrameworkComponentWrapper.provides) {\n            VueFrameworkComponentWrapper.provides = provides;\n        }\n    }\n    createWrapper(component) {\n        const that = this;\n        class DynamicComponent extends VueComponent {\n            init(params) {\n                super.init(params);\n            }\n            hasMethod(name) {\n                const componentInstance = wrapper.getFrameworkComponentInstance();\n                if (!componentInstance[name]) {\n                    return componentInstance.$.setupState[name] != null;\n                }\n                else {\n                    return true;\n                }\n            }\n            callMethod(name, args) {\n                var _a;\n                const componentInstance = this.getFrameworkComponentInstance();\n                const frameworkComponentInstance = wrapper.getFrameworkComponentInstance();\n                if (frameworkComponentInstance[name]) {\n                    return frameworkComponentInstance[name].apply(componentInstance, args);\n                }\n                else {\n                    return (_a = frameworkComponentInstance.$.setupState[name]) === null || _a === void 0 ? void 0 : _a.apply(componentInstance, args);\n                }\n            }\n            addMethod(name, callback) {\n                wrapper[name] = callback;\n            }\n            overrideProcessing(methodName) {\n                return that.parent.autoParamsRefresh && methodName === 'refresh';\n            }\n            processMethod(methodName, args) {\n                if (methodName === 'refresh') {\n                    this.getFrameworkComponentInstance().params = args[0];\n                }\n                if (this.hasMethod(methodName)) {\n                    return this.callMethod(methodName, args);\n                }\n                return methodName === 'refresh';\n            }\n            createComponent(params) {\n                return that.createComponent(component, params);\n            }\n        }\n        const wrapper = new DynamicComponent();\n        return wrapper;\n    }\n    createComponent(component, params) {\n        return VueComponentFactory.createAndMountComponent(component, params, this.parent, VueFrameworkComponentWrapper.provides);\n    }\n    createMethodProxy(wrapper, methodName, mandatory) {\n        return function () {\n            if (wrapper.overrideProcessing(methodName)) {\n                return wrapper.processMethod(methodName, arguments);\n            }\n            if (wrapper.hasMethod(methodName)) {\n                return wrapper.callMethod(methodName, arguments);\n            }\n            if (mandatory) {\n                console.warn('AG Grid: Framework component is missing the method ' + methodName + '()');\n            }\n            return null;\n        };\n    }\n    destroy() {\n        this.parent = null;\n    }\n}\nclass VueComponent {\n    getGui() {\n        return this.element;\n    }\n    destroy() {\n        if (this.getFrameworkComponentInstance() && typeof this.getFrameworkComponentInstance().destroy === 'function') {\n            this.getFrameworkComponentInstance().destroy();\n        }\n        this.unmount();\n    }\n    getFrameworkComponentInstance() {\n        return this.componentInstance;\n    }\n    init(params) {\n        var _a;\n        const { componentInstance, element, destroy: unmount } = this.createComponent(params);\n        this.componentInstance = componentInstance;\n        this.unmount = unmount;\n        // the element is the parent div we're forced to created when dynamically creating vnodes\n        // the first child is the user supplied component\n        this.element = (_a = element.firstElementChild) !== null && _a !== void 0 ? _a : element;\n    }\n}\n", "import { VanillaFrameworkOverrides } from 'ag-grid-community';\nimport { VueComponentFactory } from './VueComponentFactory';\nexport class VueFrameworkOverrides extends VanillaFrameworkOverrides {\n    constructor(parent) {\n        super('vue');\n        this.parent = parent;\n    }\n    /*\n     * vue components are specified in the \"components\" part of the vue component - as such we need a way to determine\n     * if a given component is within that context - this method provides this\n     * Note: This is only really used/necessary with cellRendererSelectors\n     */\n    frameworkComponent(name, components) {\n        let result = !!VueComponentFactory.searchForComponentInstance(this.parent, name, 10, true) ? name : null;\n        if (!result && components && components[name]) {\n            const indirectName = components[name];\n            result = !!VueComponentFactory.searchForComponentInstance(this.parent, indirectName, 10, true) ? indirectName : null;\n        }\n        return result;\n    }\n    isFrameworkComponent(comp) {\n        return typeof comp === 'object';\n    }\n}\n", "import { defineComponent, getCurrentInstance, h } from 'vue';\nimport { markRaw, toRaw } from '@vue/reactivity';\nimport { ComponentUtil, createGrid, Events } from 'ag-grid-community';\nimport { getAgGridProperties } from './Utils';\nimport { VueFrameworkComponentWrapper } from './VueFrameworkComponentWrapper';\nimport { VueFrameworkOverrides } from './VueFrameworkOverrides';\nconst ROW_DATA_EVENTS = new Set(['rowDataUpdated', 'cellValueChanged', 'rowValueChanged']);\nconst ALWAYS_SYNC_GLOBAL_EVENTS = new Set([Events.EVENT_GRID_PRE_DESTROYED]);\nconst DATA_MODEL_ATTR_NAME = 'onUpdate:modelValue'; // emit name would be update:ModelValue\nconst DATA_MODEL_EMIT_NAME = 'update:modelValue';\nconst [props, computed, watch] = getAgGridProperties();\nexport const AgGridVue = defineComponent({\n    render() {\n        return h('div');\n    },\n    props: Object.assign({ gridOptions: {\n            type: Object,\n            default: () => ({}),\n        }, autoParamsRefresh: {\n            type: Boolean,\n            default: () => false,\n        }, componentDependencies: {\n            type: Array,\n            default: () => [],\n        }, plugins: [], modules: {\n            type: Array,\n            default: () => [],\n        }, modelValue: {\n            type: Array,\n            default: undefined,\n            required: false\n        } }, props),\n    data() {\n        return {\n            api: undefined,\n            gridCreated: false,\n            isDestroyed: false,\n            gridReadyFired: false,\n            emitRowModel: undefined\n        };\n    },\n    computed,\n    watch,\n    methods: {\n        globalEventListenerFactory(restrictToSyncOnly) {\n            return (eventType, event) => {\n                if (this.isDestroyed) {\n                    return;\n                }\n                if (eventType === 'gridReady') {\n                    this.gridReadyFired = true;\n                }\n                const alwaysSync = ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType);\n                if ((alwaysSync && !restrictToSyncOnly) || (!alwaysSync && restrictToSyncOnly)) {\n                    return;\n                }\n                this.updateModelIfUsed(eventType);\n            };\n        },\n        processChanges(propertyName, currentValue, previousValue) {\n            if (this.gridCreated) {\n                if (this.skipChange(propertyName, currentValue, previousValue)) {\n                    return;\n                }\n                const options = {\n                    [propertyName]: propertyName === 'rowData' ? (Object.isFrozen(currentValue) ? currentValue : markRaw(toRaw(currentValue))) : currentValue,\n                };\n                // decouple the row data - if we don't when the grid changes row data directly that'll trigger this component to react to rowData changes,\n                // which can reset grid state (ie row selection)\n                ComponentUtil.processOnChange(options, this.api);\n            }\n        },\n        checkForBindingConflicts() {\n            const thisAsAny = this;\n            if ((thisAsAny.rowData || this.gridOptions.rowData) &&\n                thisAsAny.modelValue) {\n                console.warn('AG Grid: Using both rowData and v-model. rowData will be ignored.');\n            }\n        },\n        getRowData() {\n            var _a;\n            const rowData = [];\n            (_a = this.api) === null || _a === void 0 ? void 0 : _a.forEachNode((rowNode) => {\n                rowData.push(rowNode.data);\n            });\n            return rowData;\n        },\n        updateModelIfUsed(eventType) {\n            if (this.gridReadyFired &&\n                this.$attrs[DATA_MODEL_ATTR_NAME] &&\n                ROW_DATA_EVENTS.has(eventType)) {\n                if (this.emitRowModel) {\n                    this.emitRowModel();\n                }\n            }\n        },\n        getRowDataBasedOnBindings() {\n            const thisAsAny = this;\n            const rowData = thisAsAny.modelValue;\n            return rowData ? rowData :\n                thisAsAny.rowData ? thisAsAny.rowData : thisAsAny.gridOptions.rowData;\n        },\n        getProvides() {\n            let instance = getCurrentInstance();\n            let provides = {};\n            while (instance) {\n                if (instance && instance.provides) {\n                    provides = Object.assign(Object.assign({}, provides), instance.provides);\n                }\n                instance = instance.parent;\n            }\n            return provides;\n        },\n        /*\n        * Prevents an infinite loop when using v-model for the rowData\n        */\n        skipChange(propertyName, currentValue, previousValue) {\n            if (this.gridReadyFired &&\n                propertyName === 'rowData' &&\n                this.$attrs[DATA_MODEL_ATTR_NAME]) {\n                if (currentValue === previousValue) {\n                    return true;\n                }\n                if (currentValue && previousValue) {\n                    const currentRowData = currentValue;\n                    const previousRowData = previousValue;\n                    if (currentRowData.length === previousRowData.length) {\n                        for (let i = 0; i < currentRowData.length; i++) {\n                            if (currentRowData[i] !== previousRowData[i]) {\n                                return false;\n                            }\n                        }\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        debounce(func, delay) {\n            let timeout;\n            return () => {\n                const later = function () {\n                    func();\n                };\n                window.clearTimeout(timeout);\n                timeout = window.setTimeout(later, delay);\n            };\n        }\n    },\n    mounted() {\n        // we debounce the model update to prevent a flood of updates in the event there are many individual\n        // cell/row updates\n        this.emitRowModel = this.debounce(() => {\n            this.$emit(DATA_MODEL_EMIT_NAME, Object.freeze(this.getRowData()));\n        }, 20);\n        const provides = this.getProvides();\n        const frameworkComponentWrapper = new VueFrameworkComponentWrapper(this, provides);\n        // the gridOptions we pass to the grid don't need to be reactive (and shouldn't be - it'll cause issues\n        // with mergeDeep for example\n        const gridOptions = markRaw(ComponentUtil.combineAttributesAndGridOptions(toRaw(this.gridOptions), this));\n        this.checkForBindingConflicts();\n        const rowData = this.getRowDataBasedOnBindings();\n        if (rowData !== ComponentUtil.VUE_OMITTED_PROPERTY) {\n            gridOptions.rowData = rowData ? (Object.isFrozen(rowData) ? rowData : markRaw(toRaw(rowData))) : rowData;\n        }\n        const gridParams = {\n            globalEventListener: this.globalEventListenerFactory().bind(this),\n            globalSyncEventListener: this.globalEventListenerFactory(true).bind(this),\n            frameworkOverrides: new VueFrameworkOverrides(this),\n            providedBeanInstances: {\n                frameworkComponentWrapper,\n            },\n            modules: this.modules,\n        };\n        this.api = createGrid(this.$el, gridOptions, gridParams);\n        this.gridCreated = true;\n    },\n    unmounted() {\n        var _a;\n        if (this.gridCreated) {\n            (_a = this.api) === null || _a === void 0 ? void 0 : _a.destroy();\n            this.isDestroyed = true;\n        }\n    }\n});\n"],
  "mappings": "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",
  "names": ["props", "computed", "watch", "props"]
}
